{
    "docs": [
        {
            "location": "/",
            "text": "pyecharts\n\n\npyecharts is a library to generate charts using Echarts. It simply provides the interface between Echarts and Python.\n\n\n  \n\n\nIntroduction\n\n\nEcharts\n is an open source library from Baidu for data visualization in javascript. It has awesome demo pages so I started to look out for an interface library so that I could use it in Python. I ended up with \necharts-python\n on github but it lacks of documentation and was not updated for a while. Just like many other Python projects, I started my own project, pyecharts, referencing echarts-python and another library \npygal\n.\n\n\nInstatllation\n\n\npyecharts works on Python2 and Python3. The latest release is 0.1.9.4. For more information please refer to \nchangelog.md\n  \n\n\nYou can install it via pip\n\n\n$ pip install pyecharts\n\n\n\n\nor clone it and install it\n\n\n$ git clone https://github.com/chenjiandongx/pyecharts.git\n$ cd pyecharts\n$ python setup.py install\n\n\n\n\nBasic Usage\n\n\nfrom pyecharts import Bar\n\nattr = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\nv1 = [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3]\nv2 = [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3]\nbar = Bar(\"Bar chart\", \"precipitation and evaporation one year\")\nbar.add(\"precipitation\", attr, v1, mark_line=[\"average\"], mark_point=[\"max\", \"min\"])\nbar.add(\"evaporation\", attr, v2, mark_line=[\"average\"], mark_point=[\"max\", \"min\"])\nbar.render()\n\n\n\n\nIt will creat a file named render.html in the root directory, open file with your borwser.  \n\n\n\n\nWorking with pandas & numpy\n\n\nimport pandas as pd\nimport numpy as np\n\nfrom pyecharts import Bar\n\nindex = pd.date_range('3/8/2017', periods=6, freq='M')\ndf1 = pd.DataFrame(np.random.randn(6), index=index)\ndf2 = pd.DataFrame(np.random.randn(6), index=index)\n\ndtvalue1 = [i[0] for i in df1.values]\ndtvalue2 = [i[0] for i in df2.values]\n\nbar = Bar('Bar chart', 'Profit and loss situation')\nbar.add('profit', df1.index, dtvalue1)\nbar.add('loss', df2.index,  dtvalue2)\nbar.render()\n\n\n\n\n\n\nworking with Flask & Django\n\n\nFlask\n\n\n\n\nDjango\n\n\n\n\n\n\n\u4e2d\u6587\u6587\u6863\n\n\npyecharts + Flask\n\n\npyecharts + Django\n\n\n\n\n\n\nEnglish\n\n\npyecharts + Flask\n\n\npyecharts + Django\n\n\n\n\n\n\n\n\nDocumentation\n\n\n\n\n\u4e2d\u6587\u6587\u6863\n\n\nEnglish\n\n\n\n\nAuthor\n\n\npyecharts is developed and maintained by chenjiandongx (\nchenjiandongx@qq.com\n)\n\n\nLicense\n\n\npyecharts is released under the MIT License. See LICENSE for more information.",
            "title": "Home"
        },
        {
            "location": "/#pyecharts",
            "text": "pyecharts is a library to generate charts using Echarts. It simply provides the interface between Echarts and Python.",
            "title": "pyecharts"
        },
        {
            "location": "/#introduction",
            "text": "Echarts  is an open source library from Baidu for data visualization in javascript. It has awesome demo pages so I started to look out for an interface library so that I could use it in Python. I ended up with  echarts-python  on github but it lacks of documentation and was not updated for a while. Just like many other Python projects, I started my own project, pyecharts, referencing echarts-python and another library  pygal .",
            "title": "Introduction"
        },
        {
            "location": "/#instatllation",
            "text": "pyecharts works on Python2 and Python3. The latest release is 0.1.9.4. For more information please refer to  changelog.md     You can install it via pip  $ pip install pyecharts  or clone it and install it  $ git clone https://github.com/chenjiandongx/pyecharts.git\n$ cd pyecharts\n$ python setup.py install",
            "title": "Instatllation"
        },
        {
            "location": "/#basic-usage",
            "text": "from pyecharts import Bar\n\nattr = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\nv1 = [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3]\nv2 = [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3]\nbar = Bar(\"Bar chart\", \"precipitation and evaporation one year\")\nbar.add(\"precipitation\", attr, v1, mark_line=[\"average\"], mark_point=[\"max\", \"min\"])\nbar.add(\"evaporation\", attr, v2, mark_line=[\"average\"], mark_point=[\"max\", \"min\"])\nbar.render()  It will creat a file named render.html in the root directory, open file with your borwser.",
            "title": "Basic Usage"
        },
        {
            "location": "/#working-with-pandas-numpy",
            "text": "import pandas as pd\nimport numpy as np\n\nfrom pyecharts import Bar\n\nindex = pd.date_range('3/8/2017', periods=6, freq='M')\ndf1 = pd.DataFrame(np.random.randn(6), index=index)\ndf2 = pd.DataFrame(np.random.randn(6), index=index)\n\ndtvalue1 = [i[0] for i in df1.values]\ndtvalue2 = [i[0] for i in df2.values]\n\nbar = Bar('Bar chart', 'Profit and loss situation')\nbar.add('profit', df1.index, dtvalue1)\nbar.add('loss', df2.index,  dtvalue2)\nbar.render()",
            "title": "Working with pandas &amp; numpy"
        },
        {
            "location": "/#working-with-flask-django",
            "text": "Flask   Django    \u4e2d\u6587\u6587\u6863  pyecharts + Flask  pyecharts + Django    English  pyecharts + Flask  pyecharts + Django",
            "title": "working with Flask &amp; Django"
        },
        {
            "location": "/#documentation",
            "text": "\u4e2d\u6587\u6587\u6863  English",
            "title": "Documentation"
        },
        {
            "location": "/#author",
            "text": "pyecharts is developed and maintained by chenjiandongx ( chenjiandongx@qq.com )",
            "title": "Author"
        },
        {
            "location": "/#license",
            "text": "pyecharts is released under the MIT License. See LICENSE for more information.",
            "title": "License"
        }
    ]
}